#panderOptions('knitr.auto.asis', FALSE)
#-- White test function
white.test <- function(lmod,data=d){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
#-- funzione per ottenere osservazioni outlier univariate
FIND_EXTREME_OBSERVARION <- function(x,sd_factor=2){
which(x>mean(x)+sd_factor*sd(x) | x<mean(x)-sd_factor*sd(x))
}
#-- import dei dati
ABSOLUTE_PATH <- "C:\Users\mpich\Desktop\DsLab\Datasets"
#-- import dei dati
ABSOLUTE_PATH <- "C:\\Users\\mpich\\Desktop\\DsLab\\Datasets"
d <- read.csv(paste0(ABSOLUTE_PATH,"\\manipulated_pun.csv"),sep=";")
View(d)
#-- vettore di variabili numeriche presenti nei dati
VAR_NUMERIC <- c("PUN")
head(d)
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
cor(d[,VAR_NUMERIC]) #-- matrice di correlazione
summary(d[,VAR_NUMERIC]) #-- statistiche descrittive
par(mfrow=c(2,3))
for(i in VAR_NUMERIC){
boxplot(d[,i],main=i,col="lightblue",ylab=i)
}
# STATISTICHE DESCRITTIVE
plot(d)
d2 <- c(d['Data'], d['PUN'])
View(d2)
head(d2)
d2 <- subset(d, select = -c(ora) )
View(d)
d2 <- subset(d, select = -c(Ora) )
plot(d2)
ly <- log(d)
View(d)
??read.csv
d <- read.csv(paste0(ABSOLUTE_PATH,"\\manipulated_pun.csv"),sep=";", dec=',')
d2 <- subset(d, select = -c(Ora) )
plot(d2)
ly <- log(d)
plot(ly)
ly <- log(d2)
plot(ly)
t <- 1:lenght(d2)
t <- 1:length(d2)
reg1 <- lm(d ~ t )
reg1 <- lm(d$PUN ~ t )
reg1 <- lm(d2$PUN ~ t )
reg1 <- lm(PUN ~ t )
d2 <- subset(d, select = -c(Ora) )
PUN <- d2$PUN
t <- 1:length(PUN)
reg1 <- lm(PUN ~ t )
summary(reg1)
plot(PUN)
#-- R CODE
white.test(reg1)
#-- White test function
white.test <- function(lmod,data=d){
u2 <- lmod$residuals^2
y <- fitted(lmod)
Ru2 <- summary(lm(u2 ~ y + I(y^2)))$r.squared
LM <- nrow(data)*Ru2
p.value <- 1-pchisq(LM, 2)
data.frame("Test statistic"=LM,"P value"=p.value)
}
white.test(reg1)
reg1 <- lm(PUN ~ t + I(t^2) )
summary(reg1)
ly <- log(PUN)
reg1 <- lm(ly ~ t + I(t^2) )
t <- 1:length(ly)
reg1 <- lm(ly ~ t + I(t^2) )
ly <- log(d2)
reg1 <- lm(ly ~ t + I(t^2) )
library(readr)
dati_PUN_17_20 <- read_csv("C:/Users/mpich/Desktop/DsLab/Datasets/dati_PUN_17-20.csv",
col_types = cols(Data = col_datetime(format = "%Y-%m-%d:%H:%M:%S"")))
View(dati_PUN_17_20)
library(readr)
dati_PUN_17_20 <- read_csv("C:/Users/mpich/Desktop/DsLab/Datasets/dati_PUN_17-20.csv",
col_types = cols(Data = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(dati_PUN_17_20)
library(readr)
dati_PUN_17_20 <- read_csv("C:/Users/mpich/Desktop/DsLab/Datasets/dati_PUN_17-20.csv",
col_types = cols(Data = col_datetime(format = "%Y-%m-%d %H:%M:%S")))
View(dati_PUN_17_20)
autoplot(dati_PUN_17_20) +
ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
autoplot(a10) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
autoplot(a10) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
autoplot(dati_PUN_17_20) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
??ts
View(dati_PUN_17_20)
y <- ts(c(dati_PUN_17_20$PUN), start= 2017-01-01 00:00:00)
y <- ts(c(dati_PUN_17_20$PUN), start= 2017)
autoplot(y) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
tot <- c(dati_PUN_17_20$Data, dati_PUN_17_20$PUN)
autoplot(tot) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
library(ggfortify)
tot <- c(dati_PUN_17_20$Data, dati_PUN_17_20$PUN)
autoplot(tot) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
autoplot(dati_PUN_17_20) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
autoplot(y) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
install.packages("ggfortify")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
autoplot(y) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
autoplot(y) +
ggtitle("Energetic Price") +
ylab("$") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
autoplot(y) +
ggtitle("PUN Price Italy 2017-2020") +
ylab("$") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
ggplot(y) +
ggtitle("PUN Price Italy 2017-2020") +
ylab("$") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
ggplot(dati_PUN_17_20) +
ggtitle("PUN Price Italy 2017-2020") +
ylab("$") +
xlab("Year")
library(ggplot2)
library(ggfortify)
y <- ts(dati_PUN_17_20$PUN, start=2017)
ggplot(dati_PUN_17_20, aes('years', 'price')) + geom_line()
ggplot(y, aes('years', 'price')) + geom_line()
ggplot(dati_PUN_17_20, aes('years', 'price')) + geom_line(position = 'jitter')
ggplot(dati_PUN_17_20, aes('Data', 'PUN')) + geom_line(position = 'jitter')
ggplot(dati_PUN_17_20, aes('Data', 'PUN')) + geom_line()
ggplot(data=dati_PUN_17_20, aes(x=Data, y=PUN, group=1)) +
geom_line()
